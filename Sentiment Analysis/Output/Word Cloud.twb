<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20201.20.0326.1623                               -->
<workbook original-version='18.1' source-build='2020.1.2 (20201.20.0326.1623)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='sentiment_output' inline='true' name='federated.066i3jp0cfeaaj1eumdle0llim4k' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='sentiment_output' name='textscan.1jmm67f0e5pi4h1akcds91xquh4d'>
            <connection class='textscan' directory='C:/Old_PC/EDrive/DAL MACS/Data/Assignment4' filename='sentiment_output.csv' password='' port='0' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1jmm67f0e5pi4h1akcds91xquh4d' name='sentiment_output.csv' table='[sentiment_output#csv]' type='table'>
          <columns character-set='UTF-8' header='no' locale='en_CA' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='F2' ordinal='1' />
            <column datatype='string' name='F3' ordinal='2' />
            <column datatype='string' name='F4' ordinal='3' />
            <column datatype='string' name='F5' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[sentiment_output.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;false&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[sentiment_output.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F2</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F2]</local-name>
            <parent-name>[sentiment_output.csv]</parent-name>
            <remote-alias>F2</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F3</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F3]</local-name>
            <parent-name>[sentiment_output.csv]</parent-name>
            <remote-alias>F3</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F4</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F4]</local-name>
            <parent-name>[sentiment_output.csv]</parent-name>
            <remote-alias>F4</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F5</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F5]</local-name>
            <parent-name>[sentiment_output.csv]</parent-name>
            <remote-alias>F5</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[F4]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[F4]' derivation='Max' name='[max:F4:nk]' pivot='key' type='nominal' />
      <column-instance column='[F4]' derivation='None' name='[none:F4:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.5' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[max:F4:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;bankrupt&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;encouraging&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;knife&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;refreshing&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;top&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;crisis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;great&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;positive&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;strange&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;available&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;dedicated&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;honest&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;protective&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;support&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;celebration&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;failed&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;limited&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;sane&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;vulnerable&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;best&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;enough&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;knock&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;rich&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;tough&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;avalanche&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;delayed&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;important&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;qualified&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;thank&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;confrontation&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;fucking&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;poised&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;States&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;wow&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;abuse&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;critical&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;guarantee&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;principled&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;strict&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;complaints&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;free&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;offensive&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;shortage&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;work&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;awe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;disappointed&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;infections&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ready&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;thrilling&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;challenging&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;faster&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;lose&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;scam&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;welcome&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;clearer&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;fears&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;loses&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;screwed&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;well&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;compliant&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;freedom&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;outbreak&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;smart&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;worked&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;crack&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;good&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;popular&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;steal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;cancer&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;excited&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;leads&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;right&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;trophy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;bad&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;dumping&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;joke&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;recover&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;tired&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;annoying&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;crude&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;harassment&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;problems&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;stunning&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;clearly&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;fraudulent&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;lost&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;severe&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;willing&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;celebrated&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;extraordinary&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;like&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;safe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;virus&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;approve&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;decline&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;healthy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;protect&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;suffer&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:F4:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;bankrupt&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;encouraging&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;knife&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;refreshing&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;top&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;crisis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;great&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;positive&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;strange&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;available&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;dedicated&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;honest&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;protective&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;support&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;celebration&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;failed&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;limited&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;sane&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;vulnerable&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;best&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;enough&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;knock&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;rich&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;tough&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;avalanche&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;delayed&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;important&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;qualified&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;thank&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;confrontation&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;fucking&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;poised&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;States&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;wow&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;abuse&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;critical&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;guarantee&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;principled&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;strict&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;complaints&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;free&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;offensive&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;shortage&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;work&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;awe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;disappointed&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;infections&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ready&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;thrilling&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;challenging&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;faster&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;lose&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;scam&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;welcome&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;clearer&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;fears&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;loses&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;screwed&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;well&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;compliant&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;freedom&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;outbreak&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;smart&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;worked&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;crack&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;good&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;popular&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;steal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;cancer&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;excited&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;leads&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;right&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;trophy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;bad&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;dumping&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;joke&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;recover&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;tired&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;annoying&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;crude&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;harassment&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;problems&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;stunning&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;clearly&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;fraudulent&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;lost&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;severe&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;willing&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;celebrated&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;extraordinary&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;like&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;safe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;virus&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;approve&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;decline&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;healthy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;protect&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;suffer&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{D79FC40F-7665-4A6A-82AD-05CE5D354F49}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='sentiment_output' name='federated.066i3jp0cfeaaj1eumdle0llim4k' />
          </datasources>
          <datasource-dependencies datasource='federated.066i3jp0cfeaaj1eumdle0llim4k'>
            <column datatype='string' name='[F4]' role='dimension' type='nominal' />
            <column-instance column='[F4]' derivation='Count' name='[cnt:F4:qk]' pivot='key' type='quantitative' />
            <column-instance column='[F4]' derivation='None' name='[none:F4:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.066i3jp0cfeaaj1eumdle0llim4k].[cnt:F4:qk]' included-values='in-range'>
            <min>11</min>
          </filter>
          <slices>
            <column>[federated.066i3jp0cfeaaj1eumdle0llim4k].[cnt:F4:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' value='#75a1c7' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.066i3jp0cfeaaj1eumdle0llim4k].[none:F4:nk]' />
              <size column='[federated.066i3jp0cfeaaj1eumdle0llim4k].[cnt:F4:qk]' />
              <text column='[federated.066i3jp0cfeaaj1eumdle0llim4k].[none:F4:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='4.3685784339904785' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{FADE1845-0D45-4D77-B094-55A78F930979}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{8DBE0097-E493-4157-99C2-759FCEF3A7BB}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='172'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.066i3jp0cfeaaj1eumdle0llim4k].[cnt:F4:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.066i3jp0cfeaaj1eumdle0llim4k].[none:F4:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6A6F3515-5A53-45F8-AC8F-5A36C172A502}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
